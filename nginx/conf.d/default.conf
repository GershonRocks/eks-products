# Cache configuration
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=api_cache:10m 
                 max_size=100m inactive=60m use_temp_path=off;

server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;

    # Redirect to HTTPS in production
    # return 301 https://$server_name$request_uri;

    # API endpoints
    location /api/ {
        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        limit_conn addr 10;

        # Proxy settings
        proxy_pass http://backend;
        proxy_http_version 1.1;
        
        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        
        # Timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
        
        # Buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        
        # Cache configuration
        proxy_cache api_cache;
        proxy_cache_valid 200 1m;
        proxy_cache_valid 404 10s;
        proxy_cache_bypass $http_cache_control;
        add_header X-Cache-Status $upstream_cache_status;
    }

    # Health check endpoint (no rate limiting)
    location /health {
        access_log off;
        proxy_pass http://backend/actuator/health;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }

    # Metrics endpoint (restricted)
    location /metrics {
        allow 127.0.0.1;
        allow 172.20.0.0/24;  # Backend network
        deny all;
        
        proxy_pass http://management/actuator/prometheus;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }

    # Security.txt
    location /.well-known/security.txt {
        return 200 "Contact: security@gershonrocks.com\nPreferred-Languages: en\n";
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# HTTPS Server (uncomment when SSL certificates are available)
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name your-domain.com;
#
#     ssl_certificate /etc/nginx/ssl/cert.pem;
#     ssl_certificate_key /etc/nginx/ssl/key.pem;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     ssl_prefer_server_ciphers on;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#
#     # Include the location blocks from above
# }
