# Default values for eks-products

replicaCount: 3

image:
  repository: eks-products
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "9090"
  prometheus.io/path: "/actuator/prometheus"

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 1000

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false

service:
  type: LoadBalancer
  port: 80
  targetPort: 8080
  annotations: {}

ingress:
  enabled: false
  className: "alb"
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
  hosts:
    - host: eks-products.example.com
      paths:
        - path: /
          pathType: Prefix
  tls: []

resources:
  limits:
    cpu: 500m
    memory: 1Gi
  requests:
    cpu: 250m
    memory: 512Mi

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

persistence:
  enabled: true
  storageClass: "gp2"
  accessMode: ReadWriteOnce
  size: 1Gi
  mountPath: /app/data

redis:
  enabled: true
  architecture: standalone
  auth:
    enabled: false
  master:
    persistence:
      enabled: true
      size: 1Gi

postgresql:
  enabled: false
  
sqlite:
  enabled: true
  path: /app/data/products.db

env:
  - name: SPRING_PROFILES_ACTIVE
    value: "kubernetes"
  - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
    value: "health,info,metrics,prometheus"
  - name: MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS
    value: "always"

envFrom: []

configMap:
  enabled: true
  data:
    application.yml: |
      server:
        port: 8080
      spring:
        application:
          name: eks-products
        datasource:
          url: jdbc:sqlite:/app/data/products.db
          driver-class-name: org.sqlite.JDBC
        jpa:
          database-platform: org.hibernate.community.dialect.SQLiteDialect
          hibernate:
            ddl-auto: update
        redis:
          host: eks-products-prod-redis-master
          port: 6379
        cache:
          type: redis

secrets:
  enabled: false
  data: {}

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - eks-products
          topologyKey: kubernetes.io/hostname

livenessProbe:
  httpGet:
    path: /actuator/health/liveness
    port: http
  initialDelaySeconds: 60
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /actuator/health/readiness
    port: http
  initialDelaySeconds: 30
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

startupProbe:
  httpGet:
    path: /actuator/health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 3
  failureThreshold: 30

# Override Redis to ensure ARM64 compatibility
redis:
  architecture: standalone
  image:
    registry: docker.io
    repository: bitnami/redis
    tag: 7.0-debian-11  # Bitnami provides multi-arch images
  auth:
    enabled: false
